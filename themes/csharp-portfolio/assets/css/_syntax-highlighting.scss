// Syntax Highlighting Styles
// JetBrains Rider-inspired syntax highlighting for code blocks

// Base code block styling
.highlight {
	position: relative;
	background-color: var(--bg-tertiary);
	border: $border-width solid var(--border-light);
	border-radius: $border-radius-lg;
	margin: $spacing-6 0;
	overflow: hidden;
	box-shadow: $shadow-sm;

	@include mobile-only {
		margin: $spacing-4 0;
		border-radius: $border-radius;
	}

	// Code container
	pre {
		margin: 0;
		padding: $spacing-4 $spacing-6;
		background: transparent;
		overflow-x: auto;
		font-family: $font-mono;
		font-size: $font-size-sm;
		line-height: $line-height-relaxed;
		color: var(--text-primary);

		@include mobile-only {
			padding: $spacing-3 $spacing-4;
			font-size: $font-size-xs;
		}

		// Scrollbar styling
		&::-webkit-scrollbar {
			height: 8px;
		}

		&::-webkit-scrollbar-track {
			background: var(--bg-secondary);
		}

		&::-webkit-scrollbar-thumb {
			background: var(--border-color);
			border-radius: $border-radius;

			&:hover {
				background: var(--text-muted);
			}
		}
	}

	// Code content
	code {
		background: none;
		padding: 0;
		border: none;
		border-radius: 0;
		font-size: inherit;
		color: inherit;
	}

	// Line numbers
	.lnt {
		color: var(--text-muted);
		user-select: none;
		margin-right: $spacing-4;
		padding-right: $spacing-2;
		border-right: 1px solid var(--border-light);

		@include mobile-only {
			margin-right: $spacing-2;
			padding-right: $spacing-1;
		}
	}

	// Line number table
	.lntable {
		border-spacing: 0;
		padding: 0;
		margin: 0;
		border: 0;
		width: auto;
		overflow: initial;
		background: transparent;

		td {
			padding: 0;
			margin: 0;
			border: 0;
			vertical-align: top;
		}

		// Line numbers column
		.lntd:first-child {
			width: 10px;
			min-width: 10px;

			pre {
				margin: 0;
				padding: $spacing-4 $spacing-2 $spacing-4 $spacing-6;

				@include mobile-only {
					padding: $spacing-3 $spacing-1 $spacing-3 $spacing-4;
				}
			}
		}

		// Code content column
		.lntd:last-child {
			width: 100%;

			pre {
				margin: 0;
				padding: $spacing-4 $spacing-6 $spacing-4 0;

				@include mobile-only {
					padding: $spacing-3 $spacing-4 $spacing-3 0;
				}
			}
		}
	}
}

// Inline code styling
code:not(.highlight code) {
	@extend .text-code;
	font-size: 0.9em;
	padding: $spacing-1 $spacing-2;
	background-color: var(--bg-tertiary);
	border: 1px solid var(--border-light);
	border-radius: $border-radius-sm;
	color: var(--color-string);
	font-family: $font-mono;

	// Prevent line breaks in inline code
	white-space: nowrap;
}

// Syntax highlighting classes for light mode
:root {
	// Chroma syntax highlighting classes
	.chroma {
		// Error
		.err {
			color: var(--color-error);
			background-color: rgba(var(--color-error-rgb), 0.1);
		}

		// Line numbers
		.lnt,
		.ln {
			color: var(--text-muted);
		}

		// Keywords (class, public, private, etc.)
		.k,
		.kc,
		.kd,
		.kn,
		.kp,
		.kr,
		.kt {
			color: var(--color-keyword);
			font-weight: $font-weight-medium;
		}

		// Names (variables, functions, etc.)
		.n,
		.na,
		.nb,
		.bp,
		.nc,
		.no,
		.nd,
		.ni,
		.ne,
		.nf,
		.fm,
		.nl,
		.nn,
		.nx,
		.py,
		.nt,
		.nv,
		.vc,
		.vg,
		.vi,
		.vm {
			color: var(--text-primary);
		}

		// Class names and types
		.nc,
		.nt {
			color: var(--color-type);
			font-weight: $font-weight-medium;
		}

		// Function names and methods
		.nf,
		.fm {
			color: var(--color-method);
			font-weight: $font-weight-medium;
		}

		// Properties and attributes
		.na {
			color: var(--color-property);
		}

		// Variables
		.nv,
		.vc,
		.vg,
		.vi,
		.vm {
			color: var(--color-variable);
		}

		// Literals
		.l,
		.ld,
		.m,
		.mb,
		.mf,
		.mh,
		.mi,
		.il,
		.mo {
			color: var(--color-number);
		}

		// Strings
		.s,
		.sa,
		.sb,
		.sc,
		.dl,
		.sd,
		.s2,
		.se,
		.sh,
		.si,
		.sx,
		.sr,
		.s1,
		.ss {
			color: var(--color-string);
		}

		// Comments
		.c,
		.ch,
		.cm,
		.c1,
		.cs,
		.cp,
		.cpf {
			color: var(--color-comment);
			font-style: italic;
		}

		// Operators
		.o,
		.ow {
			color: var(--color-keyword);
		}

		// Punctuation
		.p {
			color: var(--text-primary);
		}

		// Generic (diff, etc.)
		.g,
		.gd,
		.ge,
		.gr,
		.gh,
		.gi,
		.go,
		.gp,
		.gs,
		.gu,
		.gt {
			color: var(--text-secondary);
		}

		// Diff additions
		.gi {
			color: var(--color-success);
			background-color: rgba(var(--color-success-rgb), 0.1);
		}

		// Diff deletions
		.gd {
			color: var(--color-error);
			background-color: rgba(var(--color-error-rgb), 0.1);
		}

		// Highlighted lines
		.hl {
			background-color: rgba(var(--color-warning-rgb), 0.1);
			display: block;
			width: 100%;
		}
	}
}

// Language-specific adjustments
.highlight {
	// C# specific styling
	&.language-csharp,
	&.language-cs {
		.chroma {
			// Namespace declarations
			.k + .nn {
				color: var(--color-type);
			}

			// Using statements
			.k:first-child {
				color: var(--color-keyword);
			}

			// Attributes
			.na {
				color: var(--color-property);
			}

			// Generic type parameters
			.nt {
				color: var(--color-type);
			}
		}
	}

	// JavaScript/TypeScript specific styling
	&.language-javascript,
	&.language-js,
	&.language-typescript,
	&.language-ts {
		.chroma {
			// Function declarations
			.kd + .nx {
				color: var(--color-method);
			}

			// Object properties
			.nx + .o + .nx {
				color: var(--color-property);
			}
		}
	}

	// HTML specific styling
	&.language-html {
		.chroma {
			// Tag names
			.nt {
				color: var(--color-keyword);
			}

			// Attribute names
			.na {
				color: var(--color-property);
			}

			// Attribute values
			.s {
				color: var(--color-string);
			}
		}
	}

	// CSS/SCSS specific styling
	&.language-css,
	&.language-scss {
		.chroma {
			// Selectors
			.nt,
			.nc,
			.nd {
				color: var(--color-type);
			}

			// Properties
			.k {
				color: var(--color-property);
			}

			// Values
			.s,
			.m {
				color: var(--color-string);
			}
		}
	}

	// JSON specific styling
	&.language-json {
		.chroma {
			// Keys
			.nt {
				color: var(--color-property);
			}

			// String values
			.s2 {
				color: var(--color-string);
			}

			// Numbers
			.m {
				color: var(--color-number);
			}

			// Booleans and null
			.kc {
				color: var(--color-keyword);
			}
		}
	}

	// SQL specific styling
	&.language-sql {
		.chroma {
			// Keywords
			.k {
				color: var(--color-keyword);
				text-transform: uppercase;
			}

			// Table/column names
			.n {
				color: var(--color-type);
			}

			// String literals
			.s {
				color: var(--color-string);
			}
		}
	}

	// Bash/Shell specific styling
	&.language-bash,
	&.language-shell {
		.chroma {
			// Commands
			.nb {
				color: var(--color-method);
			}

			// Variables
			.nv {
				color: var(--color-variable);
			}

			// Strings
			.s2 {
				color: var(--color-string);
			}
		}
	}
}

// Code block with title/filename
.code-block-with-title {
	margin: $spacing-6 0;

	@include mobile-only {
		margin: $spacing-4 0;
	}

	.code-title {
		background-color: var(--bg-secondary);
		border: $border-width solid var(--border-light);
		border-bottom: none;
		border-radius: $border-radius-lg $border-radius-lg 0 0;
		padding: $spacing-3 $spacing-6;
		font-family: $font-mono;
		font-size: $font-size-sm;
		color: var(--text-secondary);
		margin: 0;

		@include mobile-only {
			padding: $spacing-2 $spacing-4;
			font-size: $font-size-xs;
			border-radius: $border-radius $border-radius 0 0;
		}

		// Style as file path
		&::before {
			content: "// ";
			color: var(--color-comment);
		}
	}

	.highlight {
		margin: 0;
		border-radius: 0 0 $border-radius-lg $border-radius-lg;

		@include mobile-only {
			border-radius: 0 0 $border-radius $border-radius;
		}
	}
}

// Copy button for code blocks
.code-copy-button {
	position: absolute;
	top: $spacing-3;
	right: $spacing-3;
	background-color: var(--bg-secondary);
	border: $border-width solid var(--border-color);
	border-radius: $border-radius;
	padding: $spacing-2;
	font-family: $font-mono;
	font-size: $font-size-xs;
	color: var(--text-secondary);
	cursor: pointer;
	opacity: 0;
	transition: all $transition-fast $ease-in-out;

	&:hover {
		background-color: var(--hover-bg);
		color: var(--color-accent);
		border-color: var(--color-accent);
	}

	&:focus {
		outline: 2px solid var(--focus-outline);
		outline-offset: 2px;
	}

	&.copied {
		color: var(--color-success);
		border-color: var(--color-success);
	}

	// Show on hover
	.highlight:hover & {
		opacity: 1;
	}

	// Always show on mobile
	@include mobile-only {
		opacity: 1;
		position: static;
		margin-top: $spacing-2;
		width: 100%;
		text-align: center;
	}
}

// Responsive adjustments
@include mobile-only {
	.highlight {
		// Reduce padding on mobile
		pre {
			padding: $spacing-3;
		}

		// Smaller font size
		code {
			font-size: $font-size-xs;
		}

		// Adjust line number spacing
		.lnt {
			margin-right: $spacing-2;
		}
	}
}

// Print styles
@media print {
	.highlight {
		border: 1px solid #000;
		box-shadow: none;

		pre {
			overflow: visible;
			white-space: pre-wrap;
		}

		.code-copy-button {
			display: none;
		}
	}
}
